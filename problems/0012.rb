#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#      1: 1
#      3: 1,3
#      6: 1,2,3,6
#     10: 1,2,5,10
#     15: 1,3,5,15
#     21: 1,3,7,21
#     28: 1,2,4,7,14,28

# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?

require "minitest/autorun"
require "Prime"

def solution(factors)
  n = factors
  triangle = Array(1..factors).reduce(:+)
  loop do
    n += 1
    triangle +=n
    return triangle if triangle.prime_division.map{|i| i[1]+1}.reduce(:*)> factors
  end
  triangle
end

class TestOne < Minitest::Test
  def test_solution
    assert_equal 28, solution(5)
  end
end

p "Solution: #{solution(500)}"
